<?php

/**
 * Created by PhpStorm.
 * File name : nfo.php.
 * Comment :
 * Date: 2015-12-29
 * User: Minki Hong
 */


include_once dirname((__FILE__)).'/ople_mapping.php';


class nfo extends ople_mapping
{
    /*
     * 오플 상품 관리
     * */

    var $debug = true;

    function __construct()
    {
        parent:: __construct();
    }
    function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
    }
	
//	function test_kki(){
//		$old_qty	= $this->ople_db_pdo->query("SELECT it_stock_qty FROM yc4_item WHERE it_id='".$it_id."'")->fetch(PDO::FETCH_OBJ)->it_stock_qty;
//		return $old_qty;
//		$logon_id	= isset($_SESSION['ss_mb_id']) ? $_SESSION['ss_mb_id'] : 'NoLogin';
//	}
	
	function get_mfg_list(){
//        $this->ntics_db_reconnect();
//        $stmt = $this->ntics_db->query("select mfgcd,rtrim(mfgname) as mfgname from N_MFG where opleuse = 'y'");
        $stmt = $this->ntics_db->query("select mfgcd,rtrim(mfgname) as mfgname from N_MFG");
        $stmt->execute();

        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    function get_temp_uid(){
        $data = $this->ople_db_pdo->query("select sku from channel_item.ople_item_data where it_id is null")->fetchAll(PDO::FETCH_ASSOC);
        $it_id_arr = array();
        foreach ($data as $row) {
            $it_id_arr[] = $row['sku'];
        }
        return count($it_id_arr) < 1 ? false : $it_id_arr;
    }

    function get_item_list($search=array()){

        $where = '';
        $where_arr = array();

        $page = 1;
        if(isset($search['page']) && (int)$search['page']){
            $page = (int)$search['page'];
        }
        if(!$page){
            $page = 1;
        }

        $rows = 20;
        if(isset($search['rows']) && (int)$search['rows']){
            $rows = (int)$search['rows'];
        }
        if(!$rows){
            $rows = 1;
        }
//         임시 등록 상품만 보기
        $temp_upc_cnt = 0;
        if(isset($search['temp_fg']) && trim($search['temp_fg'])){
            $temp_upc = $this->get_temp_uid();
            $temp_upc_cnt = count($temp_upc);
            if($temp_upc !== false && count($temp_upc) > 0){
                $where .= ($where ? ' and ' : ' where ') . "a.upc in (".implode(',',array_fill(0,$temp_upc_cnt,'?')).")";
                $temp_fg = true;
            }else{
                $where .= ($where ? ' and ' : ' where ') .' 1 = 2';

            }
        }

//        UPC 검색
        $upc_arr = array();
        $upc_cnt = 0;
        if(isset($search['upc'])){
            if(trim($search['upc'])){
                $upc_arr = explode(PHP_EOL,trim($search['upc']));
                $upc_cnt = count($upc_arr);
                $where.= ($where ? ' and ':' where '). "a.upc in (".implode(',',array_fill(0,$upc_cnt,'?')).")";
            }
        }

//        it_id 검색
        $it_id_arr = array();
        $it_id_cnt = 0;
        if(isset($search['it_id'])){
            if(trim($search['it_id'])){
                $it_id_arr = explode(PHP_EOL,$search['it_id']);
                $it_id_cnt = count($it_id_arr);
                $where.= ($where ? ' and ':' where '). "a.upc in (select upc from ople_mapping where it_id in (".implode(',',array_fill(0,$it_id_cnt,'?'))."))";
            }
        }

//        브랜드 검색
        $mfg_arr = array();
        $mfg_cnt = 0;
        if(isset($search['mfgcd'])){
            if(is_array($search['mfgcd'])){
                $mfg_arr = $search['mfgcd'];
                $mfg_cnt = count($mfg_arr);
                $where.= ($where ? ' and ':' where '). "a.mfgcd in (".implode(',',array_fill(0,$mfg_cnt,'?')).")";
            }
        }


//        상품명 검색
        $it_name_fg = false;
        if(isset($search['item_name']) && $search['item_name']){
            $it_name_fg = true;
            $where .= ($where ? ' and ':' where ') . "a.item_name like concat('%',?,'%')";
        }

//        미등록 상품
        $insert_fg_where = '';
        if(isset($search['insert_fg']) && is_array($search['insert_fg'])){
            if(in_array('Y',$search['insert_fg'])){
                $insert_fg_where .= ($insert_fg_where ? ' or ':''). "(select count(*) from ople_mapping where ltrim(rtrim(upc)) = ltrim(rtrim(a.upc)) and ople_type = 'm') > 0";
            }
            if(in_array('N',$search['insert_fg'])){
                $insert_fg_where .= ($insert_fg_where ? ' or ':''). "(select count(*) from ople_mapping where ltrim(rtrim(upc)) = ltrim(rtrim(a.upc)) and ople_type = 'm') < 1";
            }
        }
        if($insert_fg_where){
            $where .= ($where ? ' and ':' where ')."({$insert_fg_where})";
        }

        if(isset($search['discontinued_fg']) && $search['discontinued_fg']){ // 단종상품 제외
            $where .= ($where ? ' and ':' where ') ."a.location not like '%dis%'";
        }



        $offset = (int)(($page - 1) * $rows);
//        $this->ntics_db_reconnect();
        $stmt = $this->ntics_db->prepare($a="
            select
                a.upc,
                concat(rtrim(a.item_name),
                  case when a.potency is not null then concat(' ',rtrim(a.potency)) end,
                  case when a.potency_unit is not null then concat(' ',rtrim(a.potency_unit)) end,
                  case when a.count is not null then concat(' ',rtrim(a.count)) end,
                  case when a.[type] is not null then concat(' ',rtrim(a.[type])) end
                ) as item_name,
                e.wholesale_price,
                f.msrp,
                a.location,
                a.currentqty,
                STUFF(
                    (
                        SELECT ', ' + a1.it_id
                           FROM
                           ople_mapping a1
                           left join
                           ople_item a2 on a1.it_id = a2.it_id

                         WHERE (ltrim(rtrim(a1.upc)) = ltrim(rtrim(a.upc))) and a1.Ople_Type = 'm'
                    FOR XML PATH ('')
                    ) ,1,2,''
                ) AS it_id
            from
                N_MASTER_ITEM a
                left join
                N_MASTER_ITEM_WHOLESALE_PRICE e on a.upc = e.upc and e.isnow = 'Y'
                left join
                rival_company_amount f on a.upc = f.upc and f.isnow = 'Y'
                left join
                ople_mapping m on a.upc = m.upc and m.ople_type = 'm'
            {$where}
            order by
            case when isnull(m.upc,'0') = '0' then '0' else '1' end asc,
            ltrim(rtrim(a.upc))
            offset {$offset} rows fetch next {$rows} rows only
        ");
//		if($_SERVER['REMOTE_ADDR']=='211.214.213.101') {
//			echo $stmt->queryString;
//			exit;
//		}

//echo $stmt->queryString;
//        echo "<pre>$a</pre>";
        $param_cnt = $param_cnt2 = 0;
        if($temp_upc_cnt > 0){
            foreach ($temp_upc as $k => $upc) {
                $stmt->bindValue(($param_cnt + $k+1),trim($upc));
//                echo ($param_cnt + $k+1).' - temp_upc'.PHP_EOL;
            }
            $param_cnt += $temp_upc_cnt;

        }
        if($upc_cnt > 0){
            foreach ($upc_arr as $k => $upc) {
                $stmt->bindValue(($param_cnt + $k+1),trim($upc));
//                echo ($param_cnt + $k+1).' - upc'.PHP_EOL;
            }
            $param_cnt += $upc_cnt;
        }

        if($it_id_cnt > 0){
            foreach ($it_id_arr as $k => $it_id) {
                $stmt->bindValue(($param_cnt + $k + 1),trim($it_id));
            }
            $param_cnt += $it_id_cnt;
        }
        if($mfg_cnt > 0){
            foreach ($mfg_arr as $k => $mfgcd) {
                $stmt->bindValue(($param_cnt + $k + 1),trim($mfgcd));
            }
            $param_cnt += $mfg_cnt;
        }

        if($it_name_fg){
            $stmt->bindValue(($param_cnt+1),$search['item_name']);
            $param_cnt++;
        }

/*        foreach ($where_arr as $column) {
            $stmt->bindValue(':'.$column,$search[$column]);
            echo ':'.$column.' - '.$search[$column].PHP_EOL;
        }*/
	
		$stmt->execute();

        /*echo '<pre>';
        echo $stmt->queryString;
        echo '</pre>';*/
        $data = $stmt->fetchAll(PDO::FETCH_ASSOC);
		
        $stmt = $this->ntics_db->prepare("
            select
                count(distinct a.upc) as cnt
            from
                N_MASTER_ITEM a
                left join
                N_MASTER_ITEM_WHOLESALE_PRICE e on a.upc = e.upc and e.isnow = 'Y'
                left join
                rival_company_amount f on a.upc = f.upc and f.isnow = 'Y'
            {$where}

        ");

        if($temp_upc_cnt > 0){
            foreach ($temp_upc as $k => $upc) {
                $stmt->bindValue(($param_cnt2 + $k+1),trim($upc));
            }
            $param_cnt2 += $temp_upc_cnt;

        }

        if($upc_cnt > 0){
            foreach ($upc_arr as $k => $upc) {
                $stmt->bindValue(($param_cnt2 + $k+1),trim($upc));
            }
            $param_cnt2 += $upc_cnt;
        }

        if($it_id_cnt > 0){
            foreach ($it_id_arr as $k => $it_id) {
                $stmt->bindValue(($param_cnt2 + $k + 1),trim($it_id));
            }
            $param_cnt2 += $it_id_cnt;
        }

        if($mfg_cnt > 0){
            foreach ($mfg_arr as $k => $mfgcd) {
                $stmt->bindValue(($param_cnt2 + $k + 1),trim($mfgcd));
            }
            $param_cnt2 += $mfg_cnt;
        }

        if($it_name_fg){
            $stmt->bindValue( ($param_cnt2 + 1),$search['item_name']);
            $param_cnt2++;
        }

        /*foreach ($where_arr as $column) {
            $stmt->bindValue(':'.$column,$search[$column]);
        }*/
        $stmt->execute();
        $count = $stmt->fetchObject()->cnt;

        return array('data'=>$data,'count'=>$count);
    }

    function get_ntics_item_info($upc){
        if(!$upc){
            return false;
        }
//        $this->ntics_db_reconnect();
        $stmt = $this->ntics_db->prepare("
            select
                top 1
                rtrim(a.upc) as upc,
                rtrim(b.mfgname) as mfgname,
                rtrim(a.item_name) as item_name,
                rtrim(a.potency) as potency,
                rtrim(a.potency_unit) as potency_unit,
                rtrim(a.count) as count,
                rtrim(a.type) as type,
                rtrim(a.potency_unit) as unit,
                c.wholesale_price,
                d.msrp,
                d.amount as iherb_amount,
                STUFF((
                SELECT ', ' + a1.it_id
                   FROM
                   ople_mapping a1
                   left join
                   ople_item a2 on a1.it_id = a2.it_id

                 WHERE (ltrim(rtrim(a1.upc)) = ltrim(rtrim(a.upc))) and a1.Ople_Type = 'm'
                    FOR XML PATH ('')) ,1,2,'') AS it_id,
                    a.location,
          a.currentqty
            from
                N_MASTER_ITEM a
                left JOIN
                N_MFG b on a.mfgcd = b.mfgcd
                left JOIN
                N_MASTER_ITEM_WHOLESALE_PRICE c on a.upc = c.upc and c.isnow = 'Y'
                left join
                rival_company_amount d on a.upc = d.upc and d.channel = 'iherb' and d.isnow = 'Y'
            where
                a.upc = ?

        ");
        $stmt->bindValue(1,$upc);
        $stmt->execute();
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }

    function get_ople_item_info($it_id){
        if(!$it_id){
            return false;
        }
//        $stmt = $this->ople_db->query("select * from yc4_item where it_id = '{$it_id}'");
        $stmt = $this->ople_db_pdo->prepare("select * from yc4_item where it_id = ?");
        $stmt->execute(array($it_id));
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }

    function chk_ople_it_id($it_id){
        if(!$it_id){
            return false;
        }
//        $stmt = $this->ople_db->query("select count(*) as cnt from yc4_item where it_id = '{$it_id}'");
        $stmt = $this->ople_db_pdo->prepare("select count(*) as cnt from yc4_item where it_id = ?");
        $stmt->execute(array($it_id));
        return $stmt->fetchObject()->cnt;
    }

    function get_item_category_data($it_id,$link_fg=true,$only_ca_id = null){
        if(!$it_id){
            return false;
        }

        $ca_id_data_sql = $this->ople_db_pdo->prepare("select ca_id from yc4_category_item where it_id = ?");
        $ca_id_data_sql->execute(array($it_id));
        $ca_id_data_arr = $ca_id_data_sql->fetchAll(PDO::FETCH_ASSOC);
        $ca_id_data = array();
        foreach ($ca_id_data_arr as $row) {
            $ca_id_data[] = $row;
        }
        $result = array();
        foreach ($ca_id_data as $row) {
            if($only_ca_id){
                $result[] = $row['ca_id'];
            }else{
                $result[$row['ca_id']] = $this->get_category_tree($row['ca_id'],$link_fg);
            }
        }

        return $result;
    }
    function get_category_tree($ca_id,$link_fg){
        $top_parent = substr($ca_id,0,2);
        $depth = strlen($ca_id) / 2;
        $station = $this->get_category_station($top_parent);


        $ca_data_sql_arr = $this->ople_db_pdo->query("
            select
                a.ca_id,a.ca_name
            from
                yc4_category_new a
            where
                a.ca_id like '{$top_parent}%'
        ")->fetchAll(PDO::FETCH_ASSOC);

        $ca_data_tmp = array();
        foreach ($ca_data_sql_arr as $row) {
            $ca_data_tmp[] = $row;
        }
        unset($ca_data_sql_arr);

        $ca_data = array();
        foreach ($ca_data_tmp as $row) {
            $ca_data[$row['ca_id']] = $row['ca_name'];
        }
        $ca_name = $station['name'];

        for($i=1; $i<=$depth; $i++){
            $no = $i * 2;
            $row_ca_id = substr($ca_id,0,$no);
            $ca_name .= ' > '.$ca_data[$row_ca_id];
        }
        if($link_fg){
            $ca_name = "<a href='http://ople.com/mall5/shop/list.php?ca_id=".$ca_id."' target='_blank'>".$ca_name."</a>";;
        }
        return $ca_name;

    }

    function get_category_station($ca_id){
        return $this->ople_db_pdo->query("
            select
               a.s_id,a.name
            from
                yc4_station a
            left join
                shop_category b on a.s_id = b.s_id
            where
                b.ca_id = '{$ca_id}'
        ")->fetch(PDO::FETCH_ASSOC);
    }

    function get_item_image($upc=null,$it_id=null){
        $nfo_image = $ople_image = '';
        if($upc){
//            $this->ntics_db_reconnect();
            $stmt = $this->ntics_db->prepare(" select image from nfo_main where upc = ? order by id desc ");
            $stmt->bindValue(1,$upc);
            $stmt->execute();
            $nfo_image_data = $stmt->fetch();
            $nfo_image = $nfo_image_data['image'];
        }

        if($it_id){
            $ople_image = 'http://ople.com/mall5/data/item/'.$it_id.'_l1';
        }

        return array('nfo'=>$nfo_image,'ople'=>$ople_image);
    }


    function get_upc_item_desc($upc){
        /*
         *
         * 영문상품설명
N_MASTER_ITEM -> item_desc
n_master_item_supplementfacts_options 성분표
n_master_item_supplementfacts


상품 설명 저장
n_master_item_ople
option
	1=>사용방법
	2=>섭취방법
         * */

        // 상품 설명 로드
//        $this->ntics_db_reconnect();
        $stmt = $this->ntics_db->prepare("
            select
                a.item_desc,a.item_usage,a.item_other,a.item_warning,
                b.opledesc,b.oplewarning,b.opledirection,b.opleeng,b.opleoption,
                c.servingsize,c.servingpercontainer,c.options,c.formtype
            from
                N_MASTER_ITEM a
                left join
                N_MASTER_ITEM_OPLE b on a.upc = b.upc
                left join
                n_master_item_supplementfacts_options c on a.upc = c.upc
            WHERE a.upc = ?
        ");
        $stmt->bindValue(1,$upc);
        $stmt->execute();
        $desc = $stmt->fetch(PDO::FETCH_ASSOC);

        // 성분표 로드
//        $this->ntics_db_reconnect();
        $stmt = $this->ntics_db->prepare("select attname,attdv,attvalue from N_MASTER_ITEM_SUPPLEMENTFACTS where upc = ?");
        $stmt->bindValue(1,$upc);
        $stmt->execute();
        $supplementfacts = $stmt->fetchAll(PDO::FETCH_ASSOC);

        return array('item_desc'=>$desc, 'supplementfacts' => $supplementfacts);

    }



    function data_img($contents, $mime='image/png')
    {
        //$contents = file_get_contents($file);
        $base64   = base64_encode($contents);
        return ('data:' . $mime . ';base64,' . $base64);
    }


    function get_category_last_child(){
        /*$stmt = $this->ople_db_pdo->query("
            select ca.ca_id
            from yc4_category_new ca
            where
                length(ca.ca_id) >= 4
                and (select count(*) from yc4_category_new where ca_id != ca.ca_id and ca_id like concat(ca.ca_id,'%')) < 1
            order by
                SUBSTRING(ca_id, 1, 2) asc,
                SUBSTRING(ca_id, 3, 2) asc,
                SUBSTRING(ca_id, 5, 2) asc
        ");*/
        $stmt = $this->ople_db_pdo->query("
            select ca.ca_id
            from yc4_category_new ca
            where
                /*length(ca.ca_id) >= 4
                and*/ 
                (select count(*) from yc4_category_new where ca_id != ca.ca_id and ca_id like concat(ca.ca_id,'%')) < 1
            order by
                SUBSTRING(ca_id, 1, 2) asc,
                SUBSTRING(ca_id, 3, 2) asc,
                SUBSTRING(ca_id, 5, 2) asc
        ");
        $stmt_result = $stmt->fetchAll(PDO::FETCH_ASSOC);
        $data = array();
        foreach ($stmt_result as $row) {
            $data[] = $row;
        }

        $result = array();
        foreach ($data as $row) {
            $result[$row['ca_id']] = $this->get_category_tree($row['ca_id'],false);
        }
        return $result;

    }

    function temp_item_insert($data){
        if(!$data['upc']){
            return false;
        }

        $insert_fg = false;
        $data['upc'] = trim($data['upc']);
        $chk_cnt = 0;


        if($data['uid']){
//            $this->ntics_db_reconnect();
            $chk_stmt = $this->ople_db_pdo->prepare("select count(*) as cnt from channel_item.ople_item_data where uid = ?");
            $chk_stmt->execute(array($data['uid']));
            $chk = $chk_stmt->fetch(PDO::FETCH_ASSOC);
            $chk_cnt = $chk['cnt'];
        }elseif($data['it_id']){ // it_id만 넘어 왔을 경우 존재하는 데이터인지 체크

            $chk_stmt = $this->ople_db_pdo->prepare("select count(*) as cnt from channel_item.ople_item_data where sku = ? and it_id = ?");
            $chk_stmt->execute(array($data['upc'],$data['it_id']));
            $chk = $chk_stmt->fetch(PDO::FETCH_ASSOC);
            $chk_cnt = $chk['cnt'];

            if($chk_cnt > 0){ // it_id의 uid를 구한다

                $uid_stmt = $this->ople_db_pdo->prepare("select uid from channel_item.ople_item_data where sku = ? and it_id = ?");
                $uid_stmt->execute(array($data['upc'],$data['it_id']));
                $data['uid'] = $uid_stmt->fetchObject()->uid;
                $insert_fg = true;
                $data['direct_fg'] = 'Y';

            }

        }


        if($data['uid'] && $chk_cnt>0){
            $uid = $data['uid'];
            $update_sql = '';
            $update_params = array();
            $update_params[] = trim((string)$data['it_maker_eng']);
            $update_params[] = trim((string)$data['it_maker_kor']);
            $update_params[] = (string)$data['it_name_kor'];
            $update_params[] = (string)$data['it_name_eng'];
            $update_params[] = (string)$data['it_name_comment'];
            $update_params[] = (float)$data['it_amount_usd'];
            $update_params[] = (float)$data['it_cust_amount_usd'];
            $update_params[] = $data['ca_id_arr'];
            if($data['img_url']){
                $update_params[] = $data['img_url'];
                $update_sql .= 'img_url = ?,';
            }
            $update_params[] = (string)$data['it_explan'];
            $update_params[] = (string)$data['desc_kor'];
            $update_params[] = (string)$data['desc_direction'];
            $update_params[] = (string)$data['desc_warning'];
            $update_params[] = (string)$data['desc_eng'];
            $update_params[] = (string)$data['desc_supp'];
            $update_params[] = (int)$data['it_health_cnt'];
            $update_params[] = (string)$data['it_origin'];
            $update_params[] = $data['it_order_onetime_limit_cnt'];
            $update_params[] = $data['it_use'];
            $update_params[] = $data['soldout_fg'];
            $update_params[] = $data['list_clearance'];
            $update_params[] = $data['ople_option'];
            $update_params[] = $data['uid'];
            $update_params[] = $data['upc'];


            $stmt = $this->ople_db_pdo->prepare("
                update channel_item.ople_item_data
                set
                    it_maker_eng = ?,
                    it_maker_kor = ?,
                    it_name_kor = ?,
                    it_name_eng = ?,
                    it_name_comment = ?,
                    it_amount_usd = ?,
                    it_cust_amount_usd = ?,
                    ca_id_arr = ?,
                    {$update_sql}
                    it_explan = ?,
                    desc_kor = ?,
                    desc_direction = ?,
                    desc_warning = ?,
                    desc_eng = ?,
                    desc_supp = ?,
                    it_health_cnt = ?,
                    it_origin = ?,
                    it_order_onetime_limit_cnt = ?,
                    it_use = ?,
                    soldout_fg = ?,
                    list_clearance = ?,
                    ople_option = ?
                where
                    uid = ?
                    and sku = ?
            ");

            if($stmt->execute($update_params) === true){

                if($data['it_id'] && $this->chk_ople_it_id($data['it_id'])){ // 이미 등록된 제품 수정

                    if($insert_fg === false) { // 이미 등록된 상품은 제외
                        $update_stmt = $this->ople_db_pdo->prepare("update channel_item.ople_item_data set it_id = ?,insert_dt=FORMAT ( GETDATE(), 'yyyyMMddHHmmss') where uid = ?");
                        $update_stmt->execute(array($data['it_id'],$uid));
                    }
                    if($data['img_url']) {
                        if ($this->img_url_save($uid, $data['img_url'])) { // 이미지 저장
                            $img_arr = $this->image_resize($uid); // 리사이즈
                            if (is_array($img_arr)) {
                                $upload_file_arr = array();
                                foreach ($img_arr as $img_path) {
                                    $upload_file_arr[] = array(
                                        'remote_path' => str_replace('/ssd/ople_data/data/item_tmp','/ssd/ople_data/data/item_tmp',str_replace($uid . '_', $data['it_id'] . '_', $img_path)),
                                        'local_path' => $img_path
                                    );
                                }
                                $this->file_upload($upload_file_arr); // 오플로 전송
                            }
                        }
                    }
                    if ($data['direct_fg']){ // 바로등록 처리

                        $it_id = $this->item_insert($uid,$data['it_id']);
                        if($it_id){
                            return array('it_id'=>$it_id,'uid'=>$uid);
                        }
                    }
                }else if ($data['direct_fg']){ // 바로등록 처리
                    $it_id = $this->item_insert($uid,$data['it_id']);
                    if($it_id){
                        return array('it_id'=>$it_id,'uid'=>$uid);
                    }
                }elseif($data['img_url']){
                    if ($this->img_url_save($uid, $data['img_url'])) { // 이미지 저장
                        $img_arr = $this->image_resize($uid); // 리사이즈
                    }
                }
                return array('it_id'=>$it_id,'uid'=>$uid);
            }else{
                print_r($stmt->errorInfo());
                print_r($stmt->queryString);
                print_r($stmt->debugDumpParams());
                return false;
            }

        }else{

            $stmt = $this->ople_db_pdo->prepare("
                insert into channel_item.ople_item_data
                (
                    sku,  it_maker_eng, it_maker_kor,
                    it_name_kor, it_name_eng, it_name_comment, it_amount_usd,
                    it_cust_amount_usd, ca_id_arr, img_url, it_explan,
                    desc_kor, desc_direction, desc_warning, desc_eng,
                    desc_supp, it_health_cnt, it_origin, it_order_onetime_limit_cnt,
                    it_use, soldout_fg, list_clearance, ople_option, create_dt
                ) values (
                    ?, ?, ?,
                    ?, ?, ?, ?,
                    ?, ?, ?, ?,
                    ?, ?, ?, ?,
                    ?, ?, ?, ?,
                    ?, ?, ?, ?, now()
                )
            ");

            $stmt->bindValue(1,$data['upc']);
            $stmt->bindValue(2,trim($data['it_maker_eng']));
            $stmt->bindValue(3,trim($data['it_maker_kor']));
            $stmt->bindValue(4,$data['it_name_kor']);
            $stmt->bindValue(5,$data['it_name_eng']);
            $stmt->bindValue(6,$data['it_name_comment']);
            $stmt->bindValue(7,(float)$data['it_amount_usd']);
            $stmt->bindValue(8,(float)$data['it_cust_amount_usd']);
            $stmt->bindValue(9,$data['ca_id_arr']);
            $stmt->bindValue(10,$data['img_url']);
            $stmt->bindValue(11,$data['it_explan']);
            $stmt->bindValue(12,$data['desc_kor']);
            $stmt->bindValue(13,$data['desc_direction']);
            $stmt->bindValue(14,$data['desc_warning']);
            $stmt->bindValue(15,$data['desc_eng']);
            $stmt->bindValue(16,$data['desc_supp']);
            $stmt->bindValue(17,$data['it_health_cnt']);
            $stmt->bindValue(18,$data['it_origin']);
            $stmt->bindValue(19,$data['it_order_onetime_limit_cnt']);
            $stmt->bindValue(20,$data['it_use']);
            $stmt->bindValue(21,$data['soldout_fg']);
            $stmt->bindValue(22,$data['list_clearance']);
            $stmt->bindValue(23,$data['ople_option']);


            if($stmt->execute() !== false){

                $it_id = null;
                $uid = $this->ople_db_pdo->lastInsertId();
                if($uid === false){
                    return false;
                }
                if($data['it_id'] && $this->chk_ople_it_id($data['it_id'])){ // 이미 등록된 제품 수정
//                    $this->ntics_db_reconnect();
                    $update_stmt = $this->ople_db_pdo->prepare("update channel_item.ople_item_data set it_id = ?,insert_dt= now() where uid = ?");
                    $update_stmt->execute( array($data['it_id'],$uid) );
                    if($data['img_url']) {
                        if ($this->img_url_save($uid, $data['img_url'])) { // 이미지 저장
                            $img_arr = $this->image_resize($uid); // 리사이즈
                            if (is_array($img_arr)) {
                                $upload_file_arr = array();
                                foreach ($img_arr as $img_path) {
                                    $upload_file_arr[] = array(
                                        'remote_path' => str_replace('/ssd/ople_data/data/item_tmp','/ssd/ople_data/data/item_tmp',str_replace($uid . '_', $data['it_id'] . '_', $img_path)),
                                        'local_path' => $img_path
                                    );
                                }
                                $this->file_upload($upload_file_arr); // 오플로 전송
                            }
                        }
                    }

                    $it_id = $this->item_insert($uid,$data['it_id']);
                    if($it_id){
                        return array('it_id'=>$it_id,'uid'=>$uid);
                    }

                }else if ($data['direct_fg']){ // 바로등록 처리
                    $it_id = $this->item_insert($uid,$data['it_id']);
                    if($it_id){
                        return array('it_id'=>$it_id,'uid'=>$uid);
                    }
                }else{
                    if($data['img_url']){
                        if($this->img_url_save($uid,$data['img_url'])){
                            $this->image_resize($uid);
                        }
                    }
                }

                return array('it_id'=>$it_id,'uid'=>$uid);
            }else{
                print_r($stmt->errorInfo());
                print_r($stmt->queryString);


                return false;
            }
        }
    }


    function get_exchange_rate(){
//        $stmt = $this->ople_db_pdo->query('select de_conv_pay from yc4_default')->fetchObject()->de_conv_pay;
        return $this->ople_db_pdo->query('select de_conv_pay from yc4_default')->fetchObject()->de_conv_pay;
    }

    function item_insert($uid,$it_id=null){

        # 임시 상품 데이터 로드
//        $this->ntics_db_reconnect();
        $stmt = $this->ople_db_pdo->prepare("select * from channel_item.ople_item_data where uid = ?");
        $stmt->execute(array($uid));
        $tmp_it = $stmt->fetch(PDO::FETCH_ASSOC);

        if(!$it_id) {
            # 신규 it_id 생성
            $new_it_id_stmt = $this->ople_db_pdo->query("select max(it_id) + 100 as it_id from yc4_item")->fetch(PDO::FETCH_ASSOC);
            $new_it_id = $new_it_id_stmt['it_id'];
        }
		$soldout_history_fg	= false;
		
        # 환율 로드 #
        $exchange_rate = $this->get_exchange_rate();
        $data = array();
        if(!$it_id) {
            $insert_stmt = $this->ople_db_pdo->prepare("
                insert into yc4_item
                set
                    it_id = :it_id,
                    ca_id = :ca_id,
                    ca_id2 = :ca_id2,
                    ca_id3 = :ca_id3,
                    ca_id4 = :ca_id4,
                    ca_id5 = :ca_id5,
                    it_name = :it_name,
                    it_gallery = :it_gallery,
                    it_maker = :it_maker,
                    it_origin = :it_origin,
                    it_opt1_subject = :it_opt1_subject,
                    it_opt2_subject = :it_opt2_subject,
                    it_opt3_subject = :it_opt3_subject,
                    it_opt4_subject = :it_opt4_subject,
                    it_opt5_subject = :it_opt5_subject,
                    it_opt6_subject = :it_opt6_subject,
                    it_opt1 = :it_opt1,
                    it_opt2 = :it_opt2,
                    it_opt3 = :it_opt3,
                    it_opt4 = :it_opt4,
                    it_opt5 = :it_opt5,
                    it_opt6 = :it_opt6,
                    it_type1 = :it_type1,
                    it_type2 = :it_type2,
                    it_type3 = :it_type3,
                    it_type4 = :it_type4,
                    it_type5 = :it_type5,
                    it_basic = :it_basic,
                    it_explan = :it_explan,
                    it_explan_html = :it_explan_html,
                    it_cust_amount = :it_cust_amount,
                    it_amount = :it_amount,
                    it_amount2 = :it_amount2,
                    it_amount3 = :it_amount3,
                    it_point = :it_point,
                    it_sell_email = :it_sell_email,
                    it_use = :it_use,
                    it_stock_qty = :it_stock_qty,
                    it_head_html = :it_head_html,
                    it_tail_html = :it_tail_html,
                    it_hit = :it_hit,
                    it_time = now(),
                    it_ip = :it_ip,
                    it_order = :it_order,
                    it_tel_inq = :it_tel_inq,
                    SKU = :SKU,
                    it_maker_description = :it_maker_description,
                    it_order_onetime_limit_cnt = :it_order_onetime_limit_cnt,
                    it_bottle_count = :it_bottle_count,
                    it_discontinued = :it_discontinued,
                    it_meta_title = :it_meta_title,
                    it_meta_description = :it_meta_description,
                    it_meta_keyword = :it_meta_keyword,
                    it_meta_h1 = :it_meta_h1,
                    nfo = :nfo,
                    it_name_kor = :it_name_kor,
                    it_name_eng = :it_name_eng,
                    it_desc_eng = :it_desc_eng,
                    it_desc_kor = :it_desc_kor,
                    it_maker_kor = :it_maker_kor,
                    it_health_cnt = :it_health_cnt,
                    list_clearance = :list_clearance,
                    it_amount_usd = :it_amount_usd,
                    it_cust_amount_usd = :it_cust_amount_usd,
                    it_create_time=NOW()
            ");

            $data['it_id'] = $new_it_id;

        }else{
			$s_fg		= $tmp_it['soldout_fg']=='Y' ? 'Y' : 'N';
			$old_qty	= ($this->ople_db_pdo->query("SELECT it_stock_qty FROM yc4_item WHERE it_id='".$it_id."'")->fetch(PDO::FETCH_OBJ)->it_stock_qty > 0) ? 'N' : 'Y';
			if($s_fg != $old_qty) $soldout_history_fg	= true;
			
            $insert_stmt = $this->ople_db_pdo->prepare("
            update yc4_item
            set
                ca_id = :ca_id,
                ca_id2 = :ca_id2,
                ca_id3 = :ca_id3,
                ca_id4 = :ca_id4,
                ca_id5 = :ca_id5,
                it_name = :it_name,
                it_gallery = :it_gallery,
                it_maker = :it_maker,
                it_origin = :it_origin,
                it_opt1_subject = :it_opt1_subject,
                it_opt2_subject = :it_opt2_subject,
                it_opt3_subject = :it_opt3_subject,
                it_opt4_subject = :it_opt4_subject,
                it_opt5_subject = :it_opt5_subject,
                it_opt6_subject = :it_opt6_subject,
                it_opt1 = :it_opt1,
                it_opt2 = :it_opt2,
                it_opt3 = :it_opt3,
                it_opt4 = :it_opt4,
                it_opt5 = :it_opt5,
                it_opt6 = :it_opt6,
                it_type1 = :it_type1,
                it_type2 = :it_type2,
                it_type3 = :it_type3,
                it_type4 = :it_type4,
                it_type5 = :it_type5,
                it_basic = :it_basic,
                it_explan = :it_explan,
                it_explan_html = :it_explan_html,
                it_cust_amount = :it_cust_amount,
                it_amount = :it_amount,
                it_amount2 = :it_amount2,
                it_amount3 = :it_amount3,
                it_point = :it_point,
                it_sell_email = :it_sell_email,
                it_use = :it_use,
                it_stock_qty = :it_stock_qty,
                it_head_html = :it_head_html,
                it_tail_html = :it_tail_html,
                it_hit = :it_hit,
                it_time = now(),
                it_ip = :it_ip,
                it_order = :it_order,
                it_tel_inq = :it_tel_inq,
                SKU = :SKU,
                it_maker_description = :it_maker_description,
                it_order_onetime_limit_cnt = :it_order_onetime_limit_cnt,
                it_bottle_count = :it_bottle_count,
                it_discontinued = :it_discontinued,
                it_meta_title = :it_meta_title,
                it_meta_description = :it_meta_description,
                it_meta_keyword = :it_meta_keyword,
                it_meta_h1 = :it_meta_h1,
                nfo = :nfo,
                it_name_kor = :it_name_kor,
                it_name_eng = :it_name_eng,
                it_desc_eng = :it_desc_eng,
                it_desc_kor = :it_desc_kor,
                it_maker_kor = :it_maker_kor,
                it_health_cnt = :it_health_cnt,
                list_clearance = :list_clearance,
                it_amount_usd = :it_amount_usd,
                it_cust_amount_usd = :it_cust_amount_usd
            where it_id = :it_id
        ");
            $data['it_id'] = $it_id;
            $new_it_id = $it_id;
        }

        $data['ca_id'] = '';
        $data['ca_id2'] = '';
        $data['ca_id3'] = '';
        $data['ca_id4'] = '';
        $data['ca_id5'] = '';
        $data['it_name'] = '['.$tmp_it['it_maker_eng'].'] '.$tmp_it['it_maker_kor'].'||'.$tmp_it['it_name_kor'].'||'.$tmp_it['it_name_eng'].($tmp_it['it_name_comment'] ? '||'.$tmp_it['it_name_comment']:'');
        $data['it_gallery'] = '0';
        $data['it_maker'] = trim($tmp_it['it_maker_eng']);
        $data['it_origin'] = $tmp_it['it_origin'];
        $data['it_opt1_subject'] = '';
        $data['it_opt2_subject'] = '';
        $data['it_opt3_subject'] = '';
        $data['it_opt4_subject'] = '';
        $data['it_opt5_subject'] = '';
        $data['it_opt6_subject'] = '';
        $data['it_opt1'] = '';
        $data['it_opt2'] = '';
        $data['it_opt3'] = '';
        $data['it_opt4'] = '';
        $data['it_opt5'] = '';
        $data['it_opt6'] = '';
        $data['it_type1'] = '0';
        $data['it_type2'] = '0';
        $data['it_type3'] = '0';
        $data['it_type4'] = '0';
        $data['it_type5'] = '0';
        $data['it_basic'] = '';
        $data['it_explan'] = $tmp_it['it_explan'];
        $data['it_explan_html'] = '1';
        $data['it_cust_amount'] = round($tmp_it['it_cust_amount_usd'] *  $exchange_rate);
        $data['it_amount'] = round($tmp_it['it_amount_usd'] *  $exchange_rate);
        $data['it_amount2'] = '0';
        $data['it_amount3'] = '0';
        $data['it_point'] = '0';
        $data['it_sell_email'] = '';
        $data['it_use'] = $tmp_it['it_use'] == '1' ? '1':'0';
        $data['it_stock_qty'] = $tmp_it['soldout_fg'] == 'Y' ? '0' : '99999';
        $data['it_head_html'] = '';
        $data['it_tail_html'] = '';
        $data['it_hit'] = '0';
        $data['it_ip'] = $_SERVER['REMOTE_ADDR'];
        $data['it_order'] = '0';
        $data['it_tel_inq'] = '0';
        $data['SKU'] = $tmp_it['sku'];
        $data['it_maker_description'] = '';
        $data['it_order_onetime_limit_cnt'] = $tmp_it['it_order_onetime_limit_cnt'];
        $data['it_bottle_count'] = '';
        $data['it_discontinued'] = '0';
        $data['it_meta_title'] = '';
        $data['it_meta_description'] = '';
        $data['it_meta_keyword'] = '';
        $data['it_meta_h1'] = '';
        $data['nfo'] = '';
        $data['it_name_kor'] = $tmp_it['it_name_kor'];
        $data['it_name_eng'] = $tmp_it['it_name_eng'];
        $data['it_desc_eng'] = '';
        $data['it_desc_kor'] = $tmp_it['it_name_comment'];
        $data['it_maker_kor'] = trim($tmp_it['it_maker_kor']);
        $data['it_health_cnt'] = $tmp_it['it_health_cnt'];
        $data['list_clearance'] = $tmp_it['list_clearance'];
        $data['it_amount_usd'] = $tmp_it['it_amount_usd'];
        $data['it_cust_amount_usd'] = $tmp_it['it_cust_amount_usd'];
        foreach ($data as $k => $row) {
//            $insert_stmt->bindValue(($k+1),$row);
            $insert_stmt->bindValue(':'.$k,$row);

        }

        if($insert_stmt->execute() === false){
            print_r($insert_stmt->errorInfo());
            exit;
        }
		
        // 품절처리 히스토리 기능 추가 2018-12-03 강경인 작업
        if($soldout_history_fg){
			$logon_id	= isset($_SESSION['ss_mb_id']) ? $_SESSION['ss_mb_id'] : 'NoLogin';
			$ntics_info_stmt	=  $this->ntics_db->prepare("select a.upc,b.currentqty from ople_mapping a left join N_MASTER_ITEM b on a.upc = b.upc where a.it_id = ? and b.upc is not null");
			$ntics_info_stmt->execute(array($it_id));
			if($ntics_info_stmt !== false){
				$ntics_info = $ntics_info_stmt->fetch(PDO::FETCH_ASSOC);
				if(trim($ntics_info['upc'])){
					$history_params = array('OPLE', trim($ntics_info['upc']), $it_id, $s_fg, 'NFO-'.$logon_id, $ntics_info['currentqty']);
					$history_insert_stmt = $this->ntics_db->prepare("insert into soldout_proc_history (channel,upc,it_id,flag,create_dt,create_id,ntics_qty) VALUES (?,?,?,?,FORMAT ( GETDATE(), 'yyyyMMddHHmmss'),?,?)");
					$history_insert_stmt->execute($history_params);
				}
			}
		}
		
        $this->insert_category($new_it_id,json_decode($tmp_it['ca_id_arr'],true)); // 카테고리 입력
        if(!$it_id) {
            $update_stmt = $this->ople_db_pdo->prepare("update channel_item.ople_item_data set it_id = ?,insert_dt = now() where uid = ?");
            $update_stmt->bindValue(1, $new_it_id);
            $update_stmt->bindValue(2, $uid);
            $update_stmt->execute();
        }

        $this->ople_mapping($new_it_id,array(array('upc'=>$tmp_it['sku'],'qty'=>1))); // 매핑


        /**
         * 해당 이미지가 있는지 여부 체크
         * 현재 이것 때문에 구이미지로 돌아감.....
         */
        $checkImage = "http://ople.com/mall5/data/item/" . $it_id;
        $isGoodsImage = (false === file_get_contents($checkImage,0,null,0,1)) ? false : true;

        if($isGoodsImage) {
            $tmp_it['img_url'] = $checkImage;
        }

        if($this->img_url_save($uid,$tmp_it['img_url'])){ // 이미지 저장

            $img_arr = $this->image_resize($uid); // 리사이즈

            if(is_array($img_arr)){
                $upload_file_arr = array();
                foreach ($img_arr as $img_path) {
                    $upload_file_arr[] = array(
                        'remote_path' => str_replace('/ssd/ople_data/data/item_tmp','/ssd/ople_data/data/item',str_replace($uid . '_', $data['it_id'] . '_', $img_path)),
                        'local_path' => $img_path
                    );
                }
                $this->file_upload($upload_file_arr); // 오플로 전송
            }
        }


        return $new_it_id;

    }

    function insert_category($it_id,$ca_arr){
        if(!is_array($ca_arr)){
            return false;
        }
        $ca_del_stmt = $this->ople_db_pdo->query("delete from yc4_category_item where it_id = '{$it_id}'");
        if($ca_del_stmt === false){
            return false;
        }

        foreach ($ca_arr as $ca_id) {
            if($this->ople_db_pdo->query("insert into yc4_category_item (ca_id,it_id) VALUES ('{$ca_id}','{$it_id}')") === false){
                echo 'category_insert_fail';
                print_r($this->ople_db->error_list);
                return false;
            }
        }
        return true;

    }

    function img_url_save($uid,$url){
        if(!$url){
            return false;
        }
        $save_path = '/ssd/ople_data/data/item_tmp/'.$uid;
        $result = file_put_contents($save_path,file_get_contents($url));

        if($result === false){
            return false;
        }

        @chmod($save_path,0777);

        $img_url = 'http://'.$_SERVER['HTTP_HOST']."/mall5/data/item_tmp/".$uid;
        $stmt = $this->ople_db_pdo->prepare("update channel_item.ople_item_data set img_url = ? where uid = ?");
        $stmt->execute(array($img_url,$uid));

        return true;
    }

    function image_resize($uid){
        $result_path_arr = array();
        $path = '/ssd/ople_data/data/item_tmp';
        $img_path = $path.'/'.$uid;
        $resize_arr = array(
            's'=>'200',
            'm'=>'400',
            'l'=>'500',
        );



        $img_info = getimagesize($img_path);
        switch ($img_info['mime']){
            case 'image/jpeg':
                $source = imagecreatefromjpeg($img_path);
                break;
            case 'image/gif':
                $source = imagecreatefromgif($img_path);
                break;
            case 'image/png':
                $source = imagecreatefrompng($img_path);
                break;
            default:
                return false;
        }

        $src_w = imagesx($source);
        $src_h = imagesy($source);

        foreach ($resize_arr as $size_nm => $size) {
            if($size_nm == 'l'){ // 큰 사이즈는 사이즈를 줄이지 않는다
                if($src_w > $size){
                    $size = $src_w;
                }

                if($src_h > $size){
                    $size = $src_h;
                }
            }
            $x_ratio = $size / $src_w;
            $y_ratio = $size / $src_h;

            if (($src_w <= $size) && ($src_h <= $size)) {
                $new_w = $src_w;
                $new_h = $src_h;
            } elseif (($x_ratio * $src_h) < $size) {
                $new_h = ceil($x_ratio * $src_h);
                $new_w = $size;
            } else {
                $new_w = ceil($y_ratio * $src_w);
                $new_h = $size;
            }

            $newpic = imagecreatetruecolor(round($new_w), round($new_h));
            imagecopyresampled($newpic, $source, 0, 0, 0, 0, $new_w, $new_h, $src_w, $src_h);
            $final = imagecreatetruecolor($size, $size);
            $backgroundColor = imagecolorallocate($final, 255, 255, 255);
            imagefill($final, 0, 0, $backgroundColor);
            //imagecopyresampled($final, $newpic, 0, 0, ($x_mid - ($tn_w / 2)), ($y_mid - ($tn_h / 2)), $tn_w, $tn_h, $tn_w, $tn_h);
            imagecopy($final, $newpic, (($size - $new_w)/ 2), (($size - $new_h) / 2), 0, 0, $new_w, $new_h);

            $new_file_nm = $path.'/'.$uid.'_'.$size_nm;
            if($size_nm == 'l'){
                $new_file_nm .= '1';
            }
//            $new_file_nm.= '.jpg';
            if (!imagejpeg($final, $new_file_nm , 100)) {

                return false;
            }

            $result_path_arr[] = $new_file_nm;

        }

        return $result_path_arr;
    }

    function file_upload($arr = array()){
        $g4['front_ftp_server']	 = "66.209.90.19";
        $g4['front_ftp_user_name'] = "ntwglobal";
        $g4['front_ftp_user_pass'] = "qwe123qwe!@#";
        $conn_id = @ftp_connect($g4['front_ftp_server']);
        $login_result = @ftp_login($conn_id, $g4['front_ftp_user_name'], $g4['front_ftp_user_pass']);

        foreach ($arr as $row) {

            $local_file = fopen($row['local_path'],'r');

            if(!file_exists($row['local_path'])){
                echo '파일이 존재하지 않습니다. '.$row['local_path'].PHP_EOL;
            }
            ftp_pasv($conn_id, true);
            $upload = ftp_fput($conn_id, $row['remote_path'], $local_file, FTP_BINARY);
            if($upload === false){
                return false;
            }
            $chmod = ftp_chmod($conn_id, 0777, $row['remote_path']);
        }


        return true;
    }

    function get_tmp_item_uid($upc){
        if(!$upc){
            return false;
        }
        $stmt = $this->ople_db_pdo->prepare("
            select
            uid
            from
            channel_item.ople_item_data
            where
            sku = ?
            and it_id is null
        ");
        $stmt->execute(array($upc));
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    function chk_tmp_item_chk($uid,$upc){
        if(!$upc){
            return false;
        }
        $stmt = $this->ople_db_pdo->prepare("
            select
            count(*) as cnt
            from
            channel_item.ople_item_data
            where
            uid = ?
            and sku = ?
            and it_id is null
        ");

        $stmt->execute(array($uid,$upc));
        if($stmt->fetchObject()->cnt < 1){
            return false;
        }
        return true;
    }

    function get_tmp_item_info($uid,$fg='uid'){
        if($fg == 'uid') {
            $stmt = $this->ople_db_pdo->prepare("
                select
                *
                from
                channel_item.ople_item_data
                where
                uid = ?
            ");

        }elseif($fg == 'it_id'){
            $stmt = $this->ople_db_pdo->prepare("
                select
                *
                from
                channel_item.ople_item_data
                where
                it_id = ?
            ");

        }
        if(!$stmt){
            return false;
        }
        if(!$stmt->execute(array($uid))){
            return false;
        }
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }

    function img_test(){
        $uid = 36;
        $img_arr = $this->image_resize($uid); // 리사이즈


        if (is_array($img_arr)) {
            $upload_file_arr = array();
            $data['it_id'] = '1510467315';
            foreach ($img_arr as $img_path) {
                $upload_file_arr[] = array(
                    'remote_path' => str_replace('/ssd/ople_data/data/item_tmp','/ssd/ople_data/data/item_tmp',str_replace($uid . '_', $data['it_id'] . '_', $img_path)),
                    'local_path' => $img_path
                );
            }

            $this->file_upload($upload_file_arr); // 오플로 전송

            print_r($upload_file_arr);
            exit;
        }
    }



}