<?php
/**
 * Created by PhpStorm.
 * File name : ople_mapping.php.
 * Comment :
 * Date: 2015-12-18
 * User: Minki Hong
 */

include_once dirname((__FILE__)).'/db.php';
class ople_mapping extends db{
    /*
     * 오플 매핑
     * */


    function __construct()
    {
        parent:: __construct();

    }

    function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
    }

    /**
     *
     * 존재하는 IT_ID 인지 체크
     * @param $it_id
     * @return bool
     */
    function it_id_chk($it_id){
//        $cnt = $this->ople_db->query("select count(*) as cnt from yc4_item where it_id = '{$it_id}'")->fetch_object()->cnt;
        $cnt_stmt = $this->ople_db_pdo->prepare("select count(*) as cnt from yc4_item where it_id = ? ");
        $cnt_stmt->execute(array($it_id));
        $cnt = $cnt_stmt->fetchObject()->cnt;
        if($cnt<1){
            return false;
        }
        return true;
    }

    /**
     * IT_ID로 UPC 찾기
     * @param $it_id
     * @return array
     */
    function get_upc($it_id){
        $sql = $this->ntics_db->prepare("select distinct upc from ople_mapping where it_id = ?");
        $sql->bindValue(1,$it_id);
        $sql->execute();
        return $sql->fetchAll(PDO::FETCH_ASSOC);
    }

    /**
     * NFO 매핑 여부 체크
     * @param $it_id
     * @return bool
     */
    function nfo_mapping_chk($it_id){
        $chk = $this->ntics_db->prepare("select count(*) as cnt from ople_mapping where it_id = ? ");
        $chk->bindValue(1,$it_id);
        $chk->execute();
        $res = $chk->fetchObject()->cnt;
        if($res < 1){
            return false;
        }
        return true;
    }

    /**
     * 배송 매핑 여부 체크
     * @param $it_id
     * @return bool
     */
    function shipping_mapping_chk($it_id){
        $chk = $this->ntics_db->prepare("select count(*) as cnt from ntshipping.dbo.ns_o02 where it_id = ? ");
        $chk->bindValue(1,$it_id);
        $chk->execute();
        $res = $chk->fetchObject()->cnt;
        if($res < 1){
            return false;
        }
        return true;
    }


    /**
     * UPC 유효성 검사
     * @param $upc
     * @return bool
     */
    function upc_chk($upc){
        $sql = $this->ntics_db->prepare("select count(*) as cnt from N_MASTER_ITEM where upc = ?");
        $sql->bindValue(1,$upc);
        $sql->execute();
        $result = $sql->fetch(PDO::FETCH_ASSOC);
//        echo $upc.PHP_EOL;
        if($result['cnt'] < 1){
            return false;
        }
        return true;
    }

    /**
     * NFO 매핑 데이터 로드
     * @param $it_id
     * @return array|bool
     */
    function get_ople_mapping_data($it_id){
        $stmt = $this->ntics_db->prepare("select * from ople_mapping where it_id = ?");
        $stmt->bindValue(1,$it_id);
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);

    }

    /**
     * 배송 매핑 데이터 로드
     * @param $it_id
     * @return array|bool
     */
    function get_shipping_mapping_data($it_id){
        $stmt = $this->ntics_db->prepare("select * from ntshipping.dbo.ns_o02 where it_id = ? order by seq");
        $stmt->bindValue(1,$it_id);
        $stmt->execute();

        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    /**
     * 배송 매핑 데이터 로드
     * @param $it_id
     * @return array
     */
    function get_shipping_mapping_data2($it_id){
        $stmt = $this->ntics_db->prepare("
            select
                a.it_id,b.upc,count(*) as qty
            from
                ntshipping.dbo.ns_o02 a
                left join
                ntshipping.dbo.ns_m01 b on a.id = b.id
            where
                a.it_id = ?
            group by a.it_id,b.upc");
        $stmt->bindValue(1,$it_id);
        $stmt->execute();

        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    /**
     * 오플 상품정보 로드
     * @param $it_id
     * @return array
     */
    function get_ople_item_info($it_id){
        $stmt = $this->ople_db_pdo->prepare("
            select
            `it_id`, `ca_id`, `ca_id2`, `ca_id3`, `ca_id4`, `ca_id5`, `it_name`, `it_gallery`, `it_maker`, `it_origin`, `it_opt1_subject`, `it_opt2_subject`, `it_opt3_subject`, `it_opt4_subject`, `it_opt5_subject`, `it_opt6_subject`, `it_opt1`, `it_opt2`, `it_opt3`, `it_opt4`, `it_opt5`, `it_opt6`, `it_type1`, `it_type2`, `it_type3`, `it_type4`, `it_type5`, `it_basic`, 'it_explan_html',  `it_cust_amount`, `it_amount`, `it_amount2`, `it_amount3`, `it_point`, `it_sell_email`, `it_use`, `it_stock_qty`, `it_head_html`, `it_tail_html`, `it_hit`, `it_time`, `it_ip`, `it_order`, `it_tel_inq`, `SKU`, `it_maker_description`, `it_order_onetime_limit_cnt`, `it_bottle_count`, `it_discontinued`, `it_meta_title`, `it_meta_description`, `it_meta_keyword`, `it_meta_h1`
            from
            yc4_item
            where
            it_id = ?
        ");
        $stmt->execute(array($it_id));

        return $stmt->fetch(PDO::FETCH_ASSOC);
    }


    /**
     * NTICS ople_item 업데이트
     * @param $it_id
     * @return bool
     */
    function ntics_ople_item_update($it_id){
        $sql = $this->ntics_db->prepare("select count(*) as cnt from ople_item where it_id = ?");
        $sql->bindValue(1,$it_id);
        $sql->execute();
        $chk = $sql->fetch(PDO::FETCH_ASSOC);

        $item_data = $this->get_ople_item_info($it_id);

        if($chk['cnt'] > 0){
            // UPDATE
            $sql = "
                update ople_item
                set
                `it_id` = :it_id ,
                `ca_id` = :ca_id ,
                `ca_id2` = :ca_id2 ,
                `ca_id3` = :ca_id3 ,
                `ca_id4` = :ca_id4 ,
                `ca_id5` = :ca_id5 ,
                `it_name` = :it_name ,
                `it_gallery` = :it_gallery ,
                `it_maker` = :it_maker ,
                `it_origin` = :it_origin ,
                `it_opt1_subject` = :it_opt1_subject ,
                `it_opt2_subject` = :it_opt2_subject ,
                `it_opt3_subject` = :it_opt3_subject ,
                `it_opt4_subject` = :it_opt4_subject ,
                `it_opt5_subject` = :it_opt5_subject ,
                `it_opt6_subject` = :it_opt6_subject ,
                `it_opt1` = :it_opt1 ,
                `it_opt2` = :it_opt2 ,
                `it_opt3` = :it_opt3 ,
                `it_opt4` = :it_opt4 ,
                `it_opt5` = :it_opt5 ,
                `it_opt6` = :it_opt6 ,
                `it_type1` = :it_type1 ,
                `it_type2` = :it_type2 ,
                `it_type3` = :it_type3 ,
                `it_type4` = :it_type4 ,
                `it_type5` = :it_type5 ,
                `it_basic` = :it_basic ,
                `it_explan_html` = :it_explan_html ,
                `it_cust_amount` = :it_cust_amount ,
                `it_amount` = :it_amount ,
                `it_amount2` = :it_amount2 ,
                `it_amount3` = :it_amount3 ,
                `it_point` = :it_point ,
                `it_sell_email` = :it_sell_email ,
                `it_use` = :it_use ,
                `it_stock_qty` = :it_stock_qty ,
                `it_head_html` = :it_head_html ,
                `it_tail_html` = :it_tail_html ,
                `it_hit` = :it_hit ,
                `it_time` = :it_time ,
                `it_ip` = :it_ip ,
                `it_order` = :it_order ,
                `it_tel_inq` = :it_tel_inq ,
                `SKU` = :SKU ,
                `it_maker_description` = :it_maker_description ,
                `it_order_onetime_limit_cnt` = :it_order_onetime_limit_cnt ,
                `it_bottle_count` = :it_bottle_count ,
                `it_discontinued` = :it_discontinued ,
                `it_meta_title` = :it_meta_title ,
                `it_meta_description` = :it_meta_description ,
                `it_meta_keyword` = :it_meta_keyword ,
                `it_meta_h1` = :it_meta_h1
                where
                  it_id = : it_id
            ";
        }else{
            // INSERT
            $sql = "
                insert into ople_item (`it_id`,`ca_id`,`ca_id2`,`ca_id3`,`ca_id4`,`ca_id5`,`it_name`,`it_gallery`,`it_maker`,`it_origin`,`it_opt1_subject`,`it_opt2_subject`,`it_opt3_subject`,`it_opt4_subject`,`it_opt5_subject`,`it_opt6_subject`,`it_opt1`,`it_opt2`,`it_opt3`,`it_opt4`,`it_opt5`,`it_opt6`,`it_type1`,`it_type2`,`it_type3`,`it_type4`,`it_type5`,`it_basic`,`it_explan_html`,`it_cust_amount`,`it_amount`,`it_amount2`,`it_amount3`,`it_point`,`it_sell_email`,`it_use`,`it_stock_qty`,`it_head_html`,`it_tail_html`,`it_hit`,`it_time`,`it_ip`,`it_order`,`it_tel_inq`,`SKU`,`it_maker_description`,`it_order_onetime_limit_cnt`,`it_bottle_count`,`it_discontinued`,`it_meta_title`,`it_meta_description`,`it_meta_keyword`,`it_meta_h1`)
                values (:it_id,:ca_id,:ca_id2,:ca_id3,:ca_id4,:ca_id5,:it_name,:it_gallery,:it_maker,:it_origin,:it_opt1_subject,:it_opt2_subject,:it_opt3_subject,:it_opt4_subject,:it_opt5_subject,:it_opt6_subject,:it_opt1,:it_opt2,:it_opt3,:it_opt4,:it_opt5,:it_opt6,:it_type1,:it_type2,:it_type3,:it_type4,:it_type5,:it_basic,:it_explan_html,:it_cust_amount,:it_amount,:it_amount2,:it_amount3,:it_point,:it_sell_email,:it_use,:it_stock_qty,:it_head_html,:it_tail_html,:it_hit,:it_time,:it_ip,:it_order,:it_tel_inq,:SKU,:it_maker_description,:it_order_onetime_limit_cnt,:it_bottle_count,:it_discontinued,:it_meta_title,:it_meta_description,:it_meta_keyword,:it_meta_h1)
            ";
        }
        $stmt = $this->ntics_db->prepare($sql);
        $stmt->bindValue(':it_id',$item_data['it_id']);
        $stmt->bindValue(':ca_id',$item_data['ca_id']);
        $stmt->bindValue(':ca_id2',$item_data['ca_id2']);
        $stmt->bindValue(':ca_id3',$item_data['ca_id3']);
        $stmt->bindValue(':ca_id4',$item_data['ca_id4']);
        $stmt->bindValue(':ca_id5',$item_data['ca_id5']);
        $stmt->bindValue(':it_name',$item_data['it_name']);
        $stmt->bindValue(':it_gallery',$item_data['it_gallery']);
        $stmt->bindValue(':it_maker',$item_data['it_maker']);
        $stmt->bindValue(':it_origin',$item_data['it_origin']);
        $stmt->bindValue(':it_opt1_subject',$item_data['it_opt1_subject']);
        $stmt->bindValue(':it_opt2_subject',$item_data['it_opt2_subject']);
        $stmt->bindValue(':it_opt3_subject',$item_data['it_opt3_subject']);
        $stmt->bindValue(':it_opt4_subject',$item_data['it_opt4_subject']);
        $stmt->bindValue(':it_opt5_subject',$item_data['it_opt5_subject']);
        $stmt->bindValue(':it_opt6_subject',$item_data['it_opt6_subject']);
        $stmt->bindValue(':it_opt1',$item_data['it_opt1']);
        $stmt->bindValue(':it_opt2',$item_data['it_opt2']);
        $stmt->bindValue(':it_opt3',$item_data['it_opt3']);
        $stmt->bindValue(':it_opt4',$item_data['it_opt4']);
        $stmt->bindValue(':it_opt5',$item_data['it_opt5']);
        $stmt->bindValue(':it_opt6',$item_data['it_opt6']);
        $stmt->bindValue(':it_type1',$item_data['it_type1']);
        $stmt->bindValue(':it_type2',$item_data['it_type2']);
        $stmt->bindValue(':it_type3',$item_data['it_type3']);
        $stmt->bindValue(':it_type4',$item_data['it_type4']);
        $stmt->bindValue(':it_type5',$item_data['it_type5']);
        $stmt->bindValue(':it_basic',$item_data['it_basic']);
        $stmt->bindValue(':it_explan_html',$item_data['it_explan_html']);
        $stmt->bindValue(':it_cust_amount',$item_data['it_cust_amount']);
        $stmt->bindValue(':it_amount',$item_data['it_amount']);
        $stmt->bindValue(':it_amount2',$item_data['it_amount2']);
        $stmt->bindValue(':it_amount3',$item_data['it_amount3']);
        $stmt->bindValue(':it_point',$item_data['it_point']);
        $stmt->bindValue(':it_sell_email',$item_data['it_sell_email']);
        $stmt->bindValue(':it_use',$item_data['it_use']);
        $stmt->bindValue(':it_stock_qty',$item_data['it_stock_qty']);
        $stmt->bindValue(':it_head_html',$item_data['it_head_html']);
        $stmt->bindValue(':it_tail_html',$item_data['it_tail_html']);
        $stmt->bindValue(':it_hit',$item_data['it_hit']);
        $stmt->bindValue(':it_time',$item_data['it_time']);
        $stmt->bindValue(':it_ip',$item_data['it_ip']);
        $stmt->bindValue(':it_order',$item_data['it_order']);
        $stmt->bindValue(':it_tel_inq',$item_data['it_tel_inq']);
        $stmt->bindValue(':SKU',$item_data['SKU']);
        $stmt->bindValue(':it_maker_description',$item_data['it_maker_description']);
        $stmt->bindValue(':it_order_onetime_limit_cnt',$item_data['it_order_onetime_limit_cnt']);
        $stmt->bindValue(':it_bottle_count',$item_data['it_bottle_count']);
        $stmt->bindValue(':it_discontinued',$item_data['it_discontinued']);
        $stmt->bindValue(':it_meta_title',$item_data['it_meta_title']);
        $stmt->bindValue(':it_meta_description',$item_data['it_meta_description']);
        $stmt->bindValue(':it_meta_keyword',$item_data['it_meta_keyword']);
        $stmt->bindValue(':it_meta_h1',$item_data['it_meta_h1']);

        if(!$stmt->execute()){
            return false;
        }
        return true;

    }

    /**
     * 오플 상품코드 변경시 NFO, 배송 매핑 상품코드 변경
     * @param $bf_it_id
     * @param $new_it_id
     * @return bool
     */
    function it_id_change($bf_it_id, $new_it_id){
        if(!$this->nfo_mapping_chk($bf_it_id)){ // 기존 매핑정보가 없다면 false
            echo 1;
            return false;
        }

        $bf_mapping = $this->get_ople_mapping_data($bf_it_id);

        if(!$bf_mapping){
            echo 2;
            return false;
        }

        $bf_shipping_mapping = $this->get_shipping_mapping_data($bf_it_id);
        if(!$bf_shipping_mapping){
            echo 3;
            return false;
        }

        /*$del_stmt = $this->ntics_db->prepare("delete from ople_mapping where it_id = ? ");
        $del_stmt->bindValue(1,$bf_it_id);
        $del_stmt->execute();*/

        if(!$this->ntics_db->inTransaction()){
            $this->ntics_db->beginTransaction(); // 트렌젝션 시작
        }

        $stmt = $this->ntics_db->prepare("update ople_item set it_id = ? where it_id = ?");
        $stmt->bindValue(1,$new_it_id);
        $stmt->bindValue(2,$bf_it_id);
        if(!$stmt->execute()){
            $this->ntics_db->rollBack();
            return false;
        }

        foreach ($bf_mapping as $row) {
            $row_stmt = $this->ntics_db->prepare("insert into ople_mapping_history (it_id,upc,qty,Cdate,CID,Ople_Type,invoiceName,InvoicePrice) values (:it_id,:upc,:qty,:Cdate,:CID,:Ople_Type,:invoiceName,:InvocePrice)");
            $row_stmt->bindValue(':it_id',$row['it_id']);
            $row_stmt->bindValue(':upc',$row['upc']);
            $row_stmt->bindValue(':qty',$row['qty']);
            $row_stmt->bindValue(':Cdate',date('Ymd'));
            $row_stmt->bindValue(':CID','AUTO');
            $row_stmt->bindValue(':Ople_Type',$row['Ople_Type']);
            $row_stmt->bindValue(':invoiceName',$row['invoiceName']);
            $row_stmt->bindValue(':InvocePrice',$row['InvocePrice']);
            if(!$row_stmt->execute()){
                return false;
            }

            $update_stmt = $this->ntics_db->prepare("update ople_mapping set it_id = ? where it_id = ?");
            $update_stmt->bindValue(1,$new_it_id);
            $update_stmt->bindValue(2,$bf_it_id);
            if(!$update_stmt->execute()){
                $this->ntics_db->rollBack();
                return false;
            }

            $update_stmt2 = $this->ntics_db->prepare("update N_MASTER_ITEM set it_id = ? where it_id = ?");
            $update_stmt2->bindValue(1,$new_it_id);
            $update_stmt2->bindValue(2,$bf_it_id);
            if(!$update_stmt2->execute()){
                $this->ntics_db->rollBack();
                return false;
            }
        }


        foreach ($bf_shipping_mapping as $row) {
            $shipping_insert_stmt = $this->ntics_db->prepare("insert into ntshipping.dbo.ns_O02 (ID,it_id,seq) VALUES (?,?,?)");
            $shipping_insert_stmt->bindValue(1,$row['ID']);
            $shipping_insert_stmt->bindValue(2,$new_it_id);
            $shipping_insert_stmt->bindValue(3,$row['seq']);
            if(!$shipping_insert_stmt->execute()){
                $this->ntics_db->rollBack();
                return false;
            }
        }
		$this->insert_ns_o01($new_it_id);

        $this->ntics_db->commit();
//        $this->ntics_db->rollBack();
        return true;
    }

    /**
     * NFO 매핑
     * @param $it_id
     * @param $upc
     * @param string $set_fg
     * @param int $qty
     * @return bool
     */
    function nfo_mapping($it_id, $upc, $set_fg='m', $qty=1){

        if($upc){ // UPC가 있다면 UPC 체크
            if(!$this->upc_chk($upc)){ // 존재하지 않는 UPC 일 경우 입력하지 않은 걸로 처리
                $upc = null;
            }
        }

        if(!$upc){ // UPC 가 없을 경우 UPC를 구한다
            $upc = $this->get_upc($it_id);
        }

        if(!$upc){ // 그래도 없으면 상품 정보의 SKU로 로드
            if($item_data = $this->get_ople_item_info($it_id)){
                if($this->upc_chk($item_data['SKU'])){
                    $upc = $item_data['SKU'];
                }
            }
        }

        $upc = trim($upc);

        if(!$upc){ // 그래도 없으면 매핑 불가가
            return false;
        }
        $in_trans_fg = false; // 밖에서 트렌젝션이 지작된었는지 여부
        if(!$this->ntics_db->inTransaction()){
            $this->ntics_db->beginTransaction();
        }else{
            $in_trans_fg = true;
        }


        $this->ntics_ople_item_update($it_id);


        if($qty>1){ // 수량이 1개 이상이면 세트상품으로 처리
            $set_fg = 's';
        }



        if($set_fg == 'm') {
            // N_MASTER_ITEM 에도 해당 상품이 매핑되어 있었다면 과감히 삭제
            $n_master_data_stmt = $this->ntics_db->prepare("update N_MASTER_ITEM set it_id = null where it_id = ? and ople_main = ?");
            $n_master_data_stmt->bindValue(1,$it_id);
            $n_master_data_stmt->bindValue(2,'m');
            $n_master_data_stmt->execute();
        }

        $insert_stmt = $this->ntics_db->prepare("insert into ople_mapping (it_id,upc,qty,cdate,cid,ople_type) values (?,?,?,?,?,?)");
        $insert_stmt->bindValue(1,$it_id);
        $insert_stmt->bindValue(2,$upc);
        $insert_stmt->bindValue(3,$qty);
        $insert_stmt->bindValue(4,date('Ymd'));
        $insert_stmt->bindValue(5,'AUTO');
        $insert_stmt->bindValue(6,$set_fg);

        $update_stmt = null;
        if($set_fg == 'm'){
            $update_stmt = $this->ntics_db->prepare("update N_MASTER_ITEM SET oplemain= ?, it_id= ? where upc = ?");
            $update_stmt->bindValue(1,'y');
            $update_stmt->bindValue(2,$it_id);
            $update_stmt->bindValue(3,$upc);

            $yc4_item_update_stmt = $this->ople_db->query("update yc4_item set sku = '{$upc}' where it_id = '{$it_id}'");
        }

        $this->ntics_ople_item_update($it_id);
        $ople_item_update_stmt = $this->ntics_db->prepare("update ople_item set mapping = ? where it_id = ?");
        $ople_item_update_stmt->bindValue(1,'y');
        $ople_item_update_stmt->bindValue(2,$it_id);


        if($insert_stmt->execute() && $ople_item_update_stmt->execute()){
            if($set_fg == 'm') {
                $update_stmt->execute();
            }
            if($in_trans_fg == false){
                $this->ntics_db->commit();
            }


            return true;
        }
        if(!$in_trans_fg){
            $this->ntics_db->rollBack();
        }
        return false;
    }

    /**
     * 배송 매핑
     * @param $it_id
     * @param $upc
     * @param $qty
     * @return bool
     */
    function shipping_mapping($it_id, $upc, $qty,$seq=null){
        if($upc){ // UPC가 있다면 UPC 체크
            if(!$this->upc_chk($upc)){ // 존재하지 않는 UPC 일 경우 입력하지 않은 걸로 처리
//                echo $upc.PHP_EOL;
                $upc = null;
            }
        }

        if(!$upc){ // UPC 가 없을 경우 UPC를 구한다

            $upc = $this->get_upc($it_id);
        }

        if(!$upc){ // 그래도 없으면 상품 정보의 SKU로 로드
            if($item_data = $this->get_ople_item_info($it_id)){
                if($this->upc_chk($item_data['SKU'])){
                    $upc = $item_data['SKU'];
                }
            }
        }

        $upc = trim($upc);

        if(!$upc){ // 그래도 없으면 매핑 불가가
            return false;
        }


        $upc_id_stmt = $this->ntics_db->prepare("select ID from ntshipping.dbo.ns_m01 where upc = ?");
        $upc_id_stmt->bindValue(1,$upc);
        $upc_id_stmt->execute();
        $upc_id = $upc_id_stmt->fetchObject()->ID;
        if(!$upc_id){
            $upc_id = $this->insert_ns_m01($upc); // ns_m01에 데이터가 없다면 insert!
            if(!$upc_id){
                return false;
            }
        }

        if(!$seq){
            $seq_chk_stmt = $this->ntics_db->prepare("select max(seq) as seq from ns_o02 where it_id = ?");
            $seq_chk_stmt->bindValue(1,$it_id);
            $seq_chk_stmt->execute();
            $seq = $seq_chk_stmt->fetchObject()->seq;
            if($seq){
                $seq += 1;
            }else{
                $seq = 1;
            }
        }

        $this->insert_ns_o01($it_id);

        $in_trans_fg = false;
        if(!$this->ntics_db->inTransaction()){
            $this->ntics_db->beginTransaction();
        }else{
            $in_trans_fg = true;
        }

        for($i=0; $i<$qty; $i++){
            $insert_stmt = $this->ntics_db->prepare("insert into ntshipping.dbo.ns_o02 (id,it_id,seq) VALUES (?,?,?)");
            $insert_stmt->bindValue(1,$upc_id);
            $insert_stmt->bindValue(2,$it_id);
            $insert_stmt->bindValue(3,$seq);
            if(!$insert_stmt->execute()){
                if(!$in_trans_fg){
                    $this->ntics_db->rollBack();
                }
                return false;
            }
            $seq++;
        }

        if($in_trans_fg == false){
            $this->ntics_db->commit();
        }

        return true;
    }

    /**
     * NS_o01 데이터 체크
     * @param $it_id
     * @return bool
     */
    function chk_ns_o01($it_id){
        $stmt = $this->ntics_db->prepare("select count(*) as cnt from ntshipping.dbo.ns_o01 where it_id = ?");
        $stmt->bindValue(1,$it_id);
        if($stmt->execute() === false){
            return false;
        }
        return $stmt->fetchObject()->cnt > 0 ? false : true;
    }

    /**
     * NS_O01 데이터 입력
     * @param $it_id
     * @return bool
     */
    function insert_ns_o01($it_id){
        if($this->chk_ns_o01($it_id) === false){
            return false;
        }
        $data = $this->ople_db_pdo->query("select it_id, it_name, it_maker, it_amount from yc4_item where it_id = '{$it_id}'")->fetchObject();
        $stmt = $this->ntics_db->prepare("insert into ntshipping.dbo.ns_o01 (it_id, it_name, it_maker, it_amount, it_cust_amount) VALUES (?,N?,N?,?,?)");
        $stmt->bindValue(1,$data->it_id);
        $stmt->bindValue(2,$data->it_name);
        $stmt->bindValue(3,$data->it_maker);
        $stmt->bindValue(4,$data->it_amount);
        $stmt->bindValue(5,10);
        return $stmt->execute();
    }


    /**
     * 배송 ns_m01에 상품 정보 insert
     * @param $upc
     * @return bool
     */
    function insert_ns_m01($upc){
        if(!$this->upc_chk($upc)){
            return false;
        }

        $stmt = $this->ntics_db->prepare("
            select
                rtrim(a.upc) as upc,
                rtrim(b.mfgname) as mfgname,
                rtrim(a.item_name) as itemdesc,
                concat(rtrim(a.count),' ',rtrim(a.type)) as size,
                concat(rtrim(a.item_name),' ',rtrim(a.potency),' ',rtrim(a.count),' ',rtrim(a.type)
                ) as invoiceokname
            from
                N_MASTER_ITEM a
                left join
                N_MFG b on a.MfgCD = b.mfgcd
            WHERE a.UPC = ?
        ");
        $stmt->bindValue(1,$upc);
        $stmt->execute();
        $data = $stmt->fetch(PDO::FETCH_ASSOC);

        $insert_stmt = $this->ntics_db->prepare("
            insert into ntshipping.dbo.ns_m01
            (upc, mfgname, itemdesc, size, invoiceokname,wp) VALUES
            (:upc, :mfgname, :itemdesc, :size, :invoiceokname,0)
        ");
        $insert_stmt->bindValue(':upc',$data['upc']);
        $insert_stmt->bindValue(':mfgname',$data['mfgname']);
        $insert_stmt->bindValue(':itemdesc',$data['itemdesc']);
        $insert_stmt->bindValue(':size',$data['size']);
        $insert_stmt->bindValue(':invoiceokname',$data['invoiceokname']);
        if(!$insert_stmt->execute()){
            if($this->ntics_db->inTransaction()){
                $this->ntics_db->rollBack();
            }
            return false;
        }
        return $this->ntics_db->lastInsertId();

    }

    /**
     * 매핑 데이터 삭제
     * @param $it_id
     * @param string $set_fg
     * @return bool
     */
    function mapping_delete($it_id, $set_fg = 'm'){
        $stmt = $this->ntics_db->prepare("update N_MASTER_ITEM set it_id = null where it_id = ?");
        $stmt->bindValue(1,$it_id);
        if($stmt->execute() === false){
            return false;
        }

        $stmt = $this->ntics_db->prepare("delete from ople_mapping where it_id = ?");
        $stmt->bindValue(1,$it_id);
        if($stmt->execute() ===false){
            return false;
        }

        $stmt = $this->ntics_db->prepare("delete from ntshipping.dbo.ns_o02 where it_id = ?");
        $stmt->bindValue(1,$it_id);
        if($stmt->execute() ===false){
            return false;
        }
        return true;
    }


    /**
     * 오플 신상품 매핑
     * @param $it_id
     * @param array $upc_arr
     * @return bool
     */
    function ople_mapping($it_id, $upc_arr = array()){
        if(!$this->it_id_chk($it_id)){
            echo 22;
            return false;
        }
		$before_upcs	= array();
		$after_upcs		= array();

        
        $ople_type = 'm';

        if(count($upc_arr)>1){
            $ople_type = 's';
        }

        if(!is_array($upc_arr) && count($upc_arr) < 1){
            echo 11;
            return false;
        }

        foreach ($upc_arr as $row) {
            if(!$row['qty']){
                $row['qty'] = 1;
            }
            if($row['qty'] > 1){
                $ople_type = 's';
            }
			
            if(!in_array(trim($row['upc']),$after_upcs)) array_push($after_upcs,trim($row['upc']));
        }
		
        $nfo_mapping_chk = false;
        /*if($this->nfo_mapping_chk($it_id)){
            $nfo_mapping_chk = true;
        }*/
        $shipping_mapping_chk = false;
        /*if($this->shipping_mapping_chk($it_id)){
            $shipping_mapping_chk = true;
        }*/
	
		if($this->nfo_mapping_chk($it_id)){
			foreach($this->get_ople_mapping_data($it_id) as $bf_map_row){
				if(!in_array(trim($bf_map_row['upc']),$before_upcs)) array_push($before_upcs,trim($bf_map_row['upc']));
			}
		}
	
		$seq = 1;
        $this->ntics_db->beginTransaction();

        if($this->mapping_delete($it_id) === false){
            $this->ntics_db->rollBack();
            return false;
        }

        foreach ($upc_arr as $row) {

            if(!$nfo_mapping_chk){
                if(!$this->nfo_mapping($it_id,$row['upc'],$ople_type,$row['qty'])){
                    $this->ntics_db->rollBack();

                    echo 1;
                    return false;
                }

            }

            if(!$shipping_mapping_chk){

                if(!$this->shipping_mapping($it_id,$row['upc'],$row['qty'],$seq)){

                    $this->ntics_db->rollBack();
                    echo 2;
                    return false;
                }
            }
            if($nfo_mapping_chk && $shipping_mapping_chk){
                echo 3;
                return false;
            }

            $seq++;
        }

        $this->ntics_db->commit();
	
		if(count($before_upcs) > 0 ) {
			if (count(array_diff($before_upcs, $after_upcs)) > 0 || count(array_diff($after_upcs, $before_upcs)) > 0) {
				$history_stmt = $this->ntics_db->prepare("
				INSERT INTO ople_mapping_change_history (it_id, bf_upcs, af_upcs, cdate, check_fg) VALUES (:it_id, :bf_upcs, :af_upcs, :cdate, 1)
				");
				$history_stmt->bindValue(':it_id', $it_id);
				$history_stmt->bindValue(':bf_upcs', implode('|', $before_upcs));
				$history_stmt->bindValue(':af_upcs', implode('|', $after_upcs));
				$history_stmt->bindValue(':cdate', date('Y:m:d H:i:s'));
				$history_stmt->execute();
			}
		}
		
//        $this->ntics_db->rollBack();
        return true;

    }

}